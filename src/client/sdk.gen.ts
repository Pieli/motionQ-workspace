// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { PostApiUsersData, PostApiUsersResponses, PostApiUsersErrors, GetApiUsersMeData, GetApiUsersMeResponses, GetApiUsersMeErrors, GetApiUsersMeCreditData, GetApiUsersMeCreditResponses, GetApiUsersMeCreditErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Create current user profile
 * Create a user
 */
export const postApiUsers = <ThrowOnError extends boolean = false>(options: Options<PostApiUsersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiUsersResponses, PostApiUsersErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/users',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get current user profile
 * Retrieve the authenticated user's profile information
 */
export const getApiUsersMe = <ThrowOnError extends boolean = false>(options?: Options<GetApiUsersMeData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiUsersMeResponses, GetApiUsersMeErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/users/me',
        ...options
    });
};

/**
 * Get current user credit information
 * Retrieve the authenticated user's current credit balance and transaction history
 */
export const getApiUsersMeCredit = <ThrowOnError extends boolean = false>(options?: Options<GetApiUsersMeCreditData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiUsersMeCreditResponses, GetApiUsersMeCreditErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/users/me/credit',
        ...options
    });
};